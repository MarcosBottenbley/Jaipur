The testing doesn't exactly work for what we have written so far, however, we are making good progress and are nearly to the point where the testing will work. Please note that in the move class there is a function called make move which is responsible for all of the game logic. Each move is seperated into it's own class, and because the makeMove function is a pure virtual function and the move class is a abstract class, each subclass has it's own defninition of the makeMove function. For make move we added paramerters (vector<int> marketchoices, vector<int> handchoices, int camels) that are there purely for testing purposes. These will be removed later on and are there so that we can control the moves that we test without having to deal with the AI. Later on we will implement several key changes. First we will hav it so that the makeMove functions call the players functions that allow them to choose cards and this will replace the testing parameters. Second we will split up the code in game significantly. We will add a class for the bank which stores all of the tokens, a class for the hand, a class for the deck, and a class that represents the market cards. Then we plan on possibly putting a bank object and a market object in a class called board. We hope this will serve to simplify the code in game. We also have two classes for the player so that the logic and UI for the AI player and the human player can be split up.